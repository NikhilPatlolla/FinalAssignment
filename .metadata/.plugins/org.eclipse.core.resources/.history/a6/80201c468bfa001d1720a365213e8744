package com.nikhil.producer;

import java.util.Queue;
import java.util.Random;

import com.nikhil.app.ProducerConsumerApp;

public class ProducerClass implements Runnable{

    private Queue<Integer> queue;

    public ProducerClass(Queue<Integer> queue) {
        this.queue = queue;
    }
    
	@Override
	public void run() {
		Random random = new Random();
		for(int i=0; i<ProducerConsumerApp.MAX_NUMBERS; i++) {
			//initially the queue will be empty
			synchronized (queue) {
				while(queue.size() == ProducerConsumerApp.LENGTH) {
					try {
						queue.wait();
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
				}
				
				int value = random.nextInt(1000);
				queue.offer(value);
				System.out.println("Producer added the value "+ value);
				//after a value in the queue is added, the other threads are notified
				queue.notifyAll();
			}
		}
	}

}
